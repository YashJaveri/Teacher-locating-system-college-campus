package com.imbuegen.hidenseek;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.pm.PackageManager;
import android.location.LocationProvider;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.provider.Settings;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.google.firebase.FirebaseApp;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class MainActivity extends AppCompatActivity implements OnClickListener {

    private LocationManager locationManager = null;
    private LocationProvider locationProvider = null;
    private Location location = null;
    private TextView locationText = null;
    //DatabaseReference location;
    private static final String TAG = "Debug";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);

        init();
    }

    private void init() {
        locationText = findViewById(R.id.txt_location);
        Button btnGetLocation = findViewById(R.id.btn_GetLocation);
        btnGetLocation.setOnClickListener(this);
        //FirebaseApp firebaseApp = FirebaseApp.initializeApp(this);
        //location= FirebaseDatabase.getInstance().getReference("location");

        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        locationProvider = locationManager != null ?
                locationManager.getProvider(LocationManager.GPS_PROVIDER) : null;
    }

    @SuppressLint("SetTextI18n")
    @Override
    public void onClick(View v) {
        String permission = "android.permission.ACCESS_FINE_LOCATION";
        int res = this.checkCallingOrSelfPermission(permission);
        if (res == PackageManager.PERMISSION_GRANTED) {
            // Permission is not granted
            LocationListener locationListener = new MyLocationListener();
            locationManager.requestLocationUpdates(LocationManager
                    .GPS_PROVIDER, 5, 1, locationListener);
        }

    }

    /*private Boolean displayGpsStatus() {
        ContentResolver contentResolver = getBaseContext()
                .getContentResolver();
        boolean gpsStatus = Settings.Secure
                .isLocationProviderEnabled(contentResolver,
                        LocationManager.GPS_PROVIDER);
        if (gpsStatus) {
            return true;

        } else {
            return false;
        }
    }*/

    /*----------Listener class to get coordinates ------------- */
    private class MyLocationListener implements LocationListener {
        @Override
        public void onLocationChanged(Location loc) {
            locationText.setText("");
            Log.d(TAG, "onLocationChanged: Called");

            if (ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                Log.d(TAG, "Called" );
                location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
                return;
            }
            locationProvider.supportsAltitude();
            Boolean hasAlt = location.hasAltitude();
            double altitude = location.getAltitude();
            String longitude = "Longitude: " + loc.getLongitude();
            String latitude = "Latitude: " + loc.getLatitude();
            String altitudeStr = "Altitude: " + loc.getAltitude();
            Log.d(TAG, "onLocationChanged: "+altitudeStr);
            String s = longitude+"\n"+latitude+"\n"+altitudeStr;
            locationText.setText(s);
        }

        @Override
        public void onProviderDisabled(String provider) {
            // TODO Auto-generated method stub
        }

        @Override
        public void onProviderEnabled(String provider) {
            // TODO Auto-generated method stub
        }

        @Override
        public void onStatusChanged(String provider,
                                    int status, Bundle extras) {
            // TODO Auto-generated method stub
        }
    }
}